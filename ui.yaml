openapi: 3.0.3
info:
  title: Skills Auth API
  description: API for user authentication and todo management.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server
paths:
  /signup:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: password123
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: User created successfully
        '400':
          description: Missing required fields or user already exists
        '500':
          description: Internal server error
  /signin:
    post:
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: password123
              required:
                - email
                - password
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Authentication successful
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: john.doe@example.com
        '401':
          description: Invalid credentials
        '404':
          description: User not found
        '500':
          description: Internal server error
  /todos:
    get:
      summary: Get all todos
      responses:
        '200':
          description: List of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Complete project presentation
                    type:
                      type: string
                      example: work
                    time:
                      type: string
                      example: 15:30
                    day:
                      type: string
                      example: 1
        '500':
          description: Internal server error
    post:
      summary: Create a new todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Complete project presentation
                type:
                  type: string
                  example: work
                time:
                  type: string
                  example: 15:30
                day:
                  type: string
                  example: 1
              required:
                - name
                - type
                - time
                - day
      responses:
        '200':
          description: Todo created successfully
        '400':
          description: Missing required fields
        '500':
          description: Internal server error
    delete:
      summary: Delete a todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
              required:
                - id
      responses:
        '200':
          description: Todo deleted successfully
        '400':
          description: Missing required fields
        '500':
          description: Internal server error
  /user:
    delete:
      summary: Delete a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: password123
              required:
                - email
                - password
      responses:
        '200':
          description: User deleted successfully
        '400':
          description: Missing email or password
        '401':
          description: Invalid credentials
        '404':
          description: User not found
        '500':
          description: Internal server error
  /super:
    get:
      summary: Get all users (Admin only)
      description: Returns a list of all registered users. This endpoint should be used with caution as it exposes sensitive user information.
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: John Doe
                    email:
                      type: string
                      example: john.doe@example.com
                    password:
                      type: string
                      example: password123
        '500':
          description: Internal server error